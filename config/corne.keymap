/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    combos {
        compatible = "zmk,combos";

        Delete_Word {
            bindings = <&kp LC(BACKSPACE)>;
            key-positions = <24 12>;
            layers = <0>;
        };
    };

    behaviors {
        Shift_Caps_Lock: Shift_Caps_Lock {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_CAPS_LOCK";
            #binding-cells = <0>;
            bindings = <&kp LSHIFT>, <&kp CAPSLOCK>;

            tapping-term-ms = <300>;
        };

        Lower_Layer: Lower_Layer {
            compatible = "zmk,behavior-tap-dance";
            label = "LOWER_LAYER";
            #binding-cells = <0>;
            bindings = <&mo 2>, <&tog 2>, <&tog 0>;

            tapping-term-ms = <300>;
        };

        Raise_Layer: Raise_Layer {
            compatible = "zmk,behavior-tap-dance";
            label = "RAISE_LAYER";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&tog 1>, <&tog 3>;

            tapping-term-ms = <301>;
        };

        Ctrl: Ctrl {
            compatible = "zmk,behavior-tap-dance";
            label = "CTRL";
            #binding-cells = <0>;
            bindings = <&kp LCTRL>, <&kt LCTRL>;

            tapping-term-ms = <300>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        QWERTY {
            display-name = "Base";
            bindings = <
&kp TAB           &kp Q        &kp W        &kp E        &kp R         &kp T          &kp Y      &kp U         &kp I             &kp O    &mt LG(LS(S)) P  &kp RIGHT_ALT
&kp BACKSPACE     &kp A        &kp S        &kp D        &kp F         &kp G          &kp H      &kp J         &kp K             &kp L    &kp SEMI         &kp SQT
&Shift_Caps_Lock  &mt LC(Z) Z  &mt LC(X) X  &mt LC(C) C  &mt LC(V) V   &mt LC(B) B    &kp N      &mt K_MUTE M  &kp COMMA         &kp DOT  &kp FSLH         &kp RIGHT_SHIFT
                                            &kp LGUI     &Lower_Layer  &kp RETURN     &kp SPACE  &Raise_Layer  &kp LEFT_CONTROL
            >;
        };

        Raise {
            display-name = "Raise";
            bindings = <
&kp TAB    &kp EXCL  &kp AT         &kp HASH       &kp DLLR          &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTERISK  &kp LPAR  &kp RPAR  &trans
&trans     &kp HOME  &kp PAGE_UP    &kp LESS_THAN  &kp GREATER_THAN  &trans       &kp MINUS  &kp EQUAL  &kp LBKT      &kp RBKT  &kp BSLH  &trans
&kp LSHFT  &kp END   &kp PAGE_DOWN  &kp LC(C)      &kp LC(V)         &trans       &kp UNDER  &kp PLUS   &kp LBRC      &kp RBRC  &kp PIPE  &kp TILDE
                                    &kp LGUI       &trans            &trans       &trans     &trans     &trans
            >;
        };

        Lower {
            display-name = "Lower";
            bindings = <
&kp TAB    &kp N1                         &kp N2                     &kp N3                   &kp N4                           &kp N5    &kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &trans
&trans     &kp N6                         &kp N7                     &kp N8                   &kp N9                           &kp N0    &kp F6        &kp F7        &kp F8        &kp F9        &kp F10       &trans
&kp LSHFT  &mt LC(LEFT_ARROW) LEFT_ARROW  &mt LC(UP_ARROW) UP_ARROW  &mt LC(DOWN) DOWN_ARROW  &mt LC(RIGHT_ARROW) RIGHT_ARROW  &trans    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
                                                                     &kp LGUI                 &trans                           &trans    &trans        &trans        &trans
            >;
        };

        Colemak {
            bindings = <
&kp TAB        &kp Q  &kp W  &kp F         &kp P   &kp G     &kp J   &kp L   &kp U      &kp Y       &kp SEMICOLON  &kp RCTRL
&kp BACKSPACE  &kp A  &kp R  &kp S         &kp T   &kp D     &kp H   &kp N   &kp E      &kp I       &kp O          &kp SQT
&kp LSHIFT     &kp Z  &kp X  &kp C         &kp V   &kp B     &kp K   &kp M   &kp COMMA  &kp PERIOD  &kp SLASH      &kp RIGHT_SHIFT
                             &kp LEFT_WIN  &trans  &trans    &trans  &trans  &trans
            >;
        };

        Nav {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans            &mkp LCLK       &trans          &mkp RCLK        &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mwh SCROLL_UP    &mmv MOVE_LEFT  &mmv MOVE_UP    &mmv MOVE_RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mwh SCROLL_DOWN  &trans          &mmv MOVE_DOWN  &trans           &trans  &trans
                        &trans  &trans  &trans    &trans            &trans          &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Mouse_Nav {
            if-layers = <1 2>;
            then-layer = <4>;
        };
    };
};
